{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport Web3 from \"web3\";\nvar web3;\nvar provider;\n\nvar enable = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return window.ethereum.enable();\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function enable() {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nif (true) {\n  if (typeof window.web3 !== \"undefined\") {\n    provider = window.web3.currentProvider;\n  }\n} else {\n  provider = new Web3.providers.HttpProvider(\"https://ropsten.infura.io/v3/2ae324fcb0d94486b6b022f559475dc7\");\n}\n\nweb3 = new Web3(provider);\nexport default web3;","map":{"version":3,"sources":["F:/Securing health records using blockchain/ethereum/web3.js"],"names":["Web3","web3","provider","enable","window","ethereum","currentProvider","providers","HttpProvider"],"mappings":";;AAAA,OAAOA,IAAP,MAAiB,MAAjB;AACA,IAAIC,IAAJ;AACA,IAAIC,QAAJ;;AACA,IAAMC,MAAM;AAAA,sEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACPC,MAAM,CAACC,QAAP,CAAgBF,MAAhB,EADO;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAANA,MAAM;AAAA;AAAA;AAAA,GAAZ;;AAGA,UAAmC;AACjC,MAAI,OAAOC,MAAM,CAACH,IAAd,KAAuB,WAA3B,EAAwC;AACtCC,IAAAA,QAAQ,GAAGE,MAAM,CAACH,IAAP,CAAYK,eAAvB;AACD;AACF,CAJD,MAIO;AACLJ,EAAAA,QAAQ,GAAG,IAAIF,IAAI,CAACO,SAAL,CAAeC,YAAnB,CACT,+DADS,CAAX;AAGD;;AACDP,IAAI,GAAG,IAAID,IAAJ,CAASE,QAAT,CAAP;AACA,eAAeD,IAAf","sourcesContent":["import Web3 from \"web3\";\r\nlet web3;\r\nlet provider;\r\nconst enable = async () => {\r\n  await window.ethereum.enable();\r\n};\r\nif (typeof window !== \"undefined\") {\r\n  if (typeof window.web3 !== \"undefined\") {\r\n    provider = window.web3.currentProvider;\r\n  }\r\n} else {\r\n  provider = new Web3.providers.HttpProvider(\r\n    \"https://ropsten.infura.io/v3/2ae324fcb0d94486b6b022f559475dc7\"\r\n  );\r\n}\r\nweb3 = new Web3(provider);\r\nexport default web3;\r\n"]},"metadata":{},"sourceType":"module"}