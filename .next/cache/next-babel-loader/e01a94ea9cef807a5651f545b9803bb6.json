{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport { Button, Card } from \"semantic-ui-react\";\nimport factory from \"../ethereum/factory\";\nimport Layout from \"../components/Layout\";\nimport web3 from \"../ethereum/web3\";\nimport record from \"../ethereum/record\";\n\nvar recordIndex = /*#__PURE__*/function (_Component) {\n  _inherits(recordIndex, _Component);\n\n  var _super = _createSuper(recordIndex);\n\n  function recordIndex() {\n    _classCallCheck(this, recordIndex);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(recordIndex, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var accounts, items, i, recordInstance, eachRecord;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return web3.eth.getAccounts();\n\n              case 2:\n                accounts = _context.sent;\n                items = [];\n                i = 0;\n\n              case 5:\n                if (!(i < this.props.records)) {\n                  _context.next = 14;\n                  break;\n                }\n\n                recordInstance = record(this.props.records[i]);\n                _context.next = 9;\n                return recordInstance.methods.getNameandAddress().call();\n\n              case 9:\n                eachRecord = _context.sent;\n                console.log(eachRecord);\n\n              case 11:\n                i++;\n                _context.next = 5;\n                break;\n\n              case 14:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }()\n  }, {\n    key: \"renderRecords\",\n    value: function renderRecords() {\n      var items = this.props.records.map(function (address) {\n        return {\n          header: address,\n          description: /*#__PURE__*/_jsx(\"a\", {\n            children: \"View record\"\n          }),\n          fluid: true\n        };\n      });\n      return /*#__PURE__*/_jsx(Card.Group, {\n        items: items,\n        itemsPerRow: 6\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/_jsxs(Layout, {\n        children: [/*#__PURE__*/_jsx(Button, {\n          content: \"Create record\",\n          floated: \"right\",\n          icon: \"add circle\",\n          primary: true\n        }), this.renderRecords()]\n      });\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function () {\n      var _getInitialProps = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        var records;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return factory.methods.getDeployedRecords().call();\n\n              case 2:\n                records = _context2.sent;\n                return _context2.abrupt(\"return\", {\n                  records: records\n                });\n\n              case 4:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function getInitialProps() {\n        return _getInitialProps.apply(this, arguments);\n      }\n\n      return getInitialProps;\n    }()\n  }]);\n\n  return recordIndex;\n}(Component);\n\nexport default recordIndex;","map":{"version":3,"sources":["F:/Securing health records using blockchain/pages/index.js"],"names":["React","Component","Button","Card","factory","Layout","web3","record","recordIndex","eth","getAccounts","accounts","items","i","props","records","recordInstance","methods","getNameandAddress","call","eachRecord","console","log","map","address","header","description","fluid","renderRecords","getDeployedRecords"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,MAAT,EAAiBC,IAAjB,QAA6B,mBAA7B;AACA,OAAOC,OAAP,MAAoB,qBAApB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,IAAP,MAAiB,kBAAjB;AACA,OAAOC,MAAP,MAAmB,oBAAnB;;IACMC,W;;;;;;;;;;;;;;;;;;;;;uBAMqBF,IAAI,CAACG,GAAL,CAASC,WAAT,E;;;AAAjBC,gBAAAA,Q;AACAC,gBAAAA,K,GAAQ,E;AACLC,gBAAAA,C,GAAI,C;;;sBAAGA,CAAC,GAAG,KAAKC,KAAL,CAAWC,O;;;;;AACvBC,gBAAAA,c,GAAiBT,MAAM,CAAC,KAAKO,KAAL,CAAWC,OAAX,CAAmBF,CAAnB,CAAD,C;;uBACJG,cAAc,CAACC,OAAf,CACtBC,iBADsB,GAEtBC,IAFsB,E;;;AAAnBC,gBAAAA,U;AAGNC,gBAAAA,OAAO,CAACC,GAAR,CAAYF,UAAZ;;;AALsCP,gBAAAA,CAAC,E;;;;;;;;;;;;;;;;;;;;oCAQ3B;AACd,UAAMD,KAAK,GAAG,KAAKE,KAAL,CAAWC,OAAX,CAAmBQ,GAAnB,CAAuB,UAACC,OAAD,EAAa;AAChD,eAAO;AACLC,UAAAA,MAAM,EAAED,OADH;AAELE,UAAAA,WAAW,eAAE;AAAA;AAAA,YAFR;AAGLC,UAAAA,KAAK,EAAE;AAHF,SAAP;AAKD,OANa,CAAd;AAQA,0BAAO,KAAC,IAAD,CAAM,KAAN;AAAY,QAAA,KAAK,EAAEf,KAAnB;AAA0B,QAAA,WAAW,EAAE;AAAvC,QAAP;AACD;;;6BAEQ;AACP,0BACE,MAAC,MAAD;AAAA,gCACE,KAAC,MAAD;AACE,UAAA,OAAO,EAAC,eADV;AAEE,UAAA,OAAO,EAAC,OAFV;AAGE,UAAA,IAAI,EAAC,YAHP;AAIE,UAAA,OAAO;AAJT,UADF,EAOG,KAAKgB,aAAL,EAPH;AAAA,QADF;AAWD;;;;;;;;;;;uBAtCuBxB,OAAO,CAACa,OAAR,CAAgBY,kBAAhB,GAAqCV,IAArC,E;;;AAAhBJ,gBAAAA,O;kDACC;AAAEA,kBAAAA,OAAO,EAAPA;AAAF,iB;;;;;;;;;;;;;;;;;;;EAHed,S;;AA2C1B,eAAeO,WAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Button, Card } from \"semantic-ui-react\";\r\nimport factory from \"../ethereum/factory\";\r\nimport Layout from \"../components/Layout\";\r\nimport web3 from \"../ethereum/web3\";\r\nimport record from \"../ethereum/record\";\r\nclass recordIndex extends Component {\r\n  static async getInitialProps() {\r\n    const records = await factory.methods.getDeployedRecords().call();\r\n    return { records };\r\n  }\r\n  async componentDidMount() {\r\n    const accounts = await web3.eth.getAccounts();\r\n    const items = [];\r\n    for (var i = 0; i < this.props.records; i++) {\r\n      const recordInstance = record(this.props.records[i]);\r\n      const eachRecord = await recordInstance.methods\r\n        .getNameandAddress()\r\n        .call();\r\n      console.log(eachRecord);\r\n    }\r\n  }\r\n  renderRecords() {\r\n    const items = this.props.records.map((address) => {\r\n      return {\r\n        header: address,\r\n        description: <a>View record</a>,\r\n        fluid: true,\r\n      };\r\n    });\r\n\r\n    return <Card.Group items={items} itemsPerRow={6} />;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Layout>\r\n        <Button\r\n          content=\"Create record\"\r\n          floated=\"right\"\r\n          icon=\"add circle\"\r\n          primary\r\n        />\r\n        {this.renderRecords()}\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n\r\nexport default recordIndex;\r\n"]},"metadata":{},"sourceType":"module"}