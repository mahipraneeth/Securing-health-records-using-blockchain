{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from \"react\";\nimport { Button, Card, Icon } from \"semantic-ui-react\";\nimport factory from \"../ethereum/factory\";\nimport Layout from \"../components/Layout\";\nimport web3 from \"../ethereum/web3\";\nimport Record from \"../ethereum/record\";\nimport { Link } from \"../routes\";\n\nclass recordIndex extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      items: []\n    });\n  }\n\n  static async getInitialProps() {\n    const records = await factory.methods.getDeployedRecords().call();\n    return {\n      records\n    };\n  }\n\n  async componentDidMount() {\n    const accounts = await web3.eth.getAccounts();\n    const items = [];\n    console.log(this.props.records.length);\n\n    for (var i = 0; i < this.props.records.length; i++) {\n      const recordInstance = Record(this.props.records[i]);\n      console.log(recordInstance.options.address);\n      const eachRecord = await recordInstance.methods.getNameandAddress().call({\n        from: accounts[0]\n      });\n      items.push({\n        image: eachRecord[1],\n        header: eachRecord[0],\n        description: eachRecord[2],\n        fluid: true,\n        extra: /*#__PURE__*/_jsx(Link, {\n          route: `/Records/${this.props.records[i]}`,\n          children: /*#__PURE__*/_jsxs(\"a\", {\n            children: [/*#__PURE__*/_jsx(Icon, {\n              name: \"user\"\n            }), \"View\"]\n          })\n        })\n      });\n    }\n\n    this.setState({\n      items\n    });\n  }\n\n  renderRecords() {\n    return /*#__PURE__*/_jsx(Card.Group, {\n      items: this.state.items,\n      itemsPerRow: 2\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxs(Layout, {\n      children: [/*#__PURE__*/_jsx(Link, {\n        route: \"/doctors\",\n        children: /*#__PURE__*/_jsx(\"a\", {\n          children: /*#__PURE__*/_jsx(Button, {\n            content: \"Create record\",\n            floated: \"right\",\n            icon: \"add circle\",\n            primary: true\n          })\n        })\n      }), this.renderRecords()]\n    });\n  }\n\n}\n\nexport default recordIndex;","map":{"version":3,"sources":["F:/Securing health records using blockchain/pages/all.js"],"names":["React","Component","Button","Card","Icon","factory","Layout","web3","Record","Link","recordIndex","items","getInitialProps","records","methods","getDeployedRecords","call","componentDidMount","accounts","eth","getAccounts","console","log","props","length","i","recordInstance","options","address","eachRecord","getNameandAddress","from","push","image","header","description","fluid","extra","setState","renderRecords","state","render"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,IAAvB,QAAmC,mBAAnC;AACA,OAAOC,OAAP,MAAoB,qBAApB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,IAAP,MAAiB,kBAAjB;AACA,OAAOC,MAAP,MAAmB,oBAAnB;AACA,SAASC,IAAT,QAAqB,WAArB;;AACA,MAAMC,WAAN,SAA0BT,SAA1B,CAAoC;AAAA;AAAA;;AAAA,mCAC1B;AACNU,MAAAA,KAAK,EAAE;AADD,KAD0B;AAAA;;AAIlC,eAAaC,eAAb,GAA+B;AAC7B,UAAMC,OAAO,GAAG,MAAMR,OAAO,CAACS,OAAR,CAAgBC,kBAAhB,GAAqCC,IAArC,EAAtB;AACA,WAAO;AAAEH,MAAAA;AAAF,KAAP;AACD;;AACD,QAAMI,iBAAN,GAA0B;AACxB,UAAMC,QAAQ,GAAG,MAAMX,IAAI,CAACY,GAAL,CAASC,WAAT,EAAvB;AACA,UAAMT,KAAK,GAAG,EAAd;AACAU,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAL,CAAWV,OAAX,CAAmBW,MAA/B;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKF,KAAL,CAAWV,OAAX,CAAmBW,MAAvC,EAA+CC,CAAC,EAAhD,EAAoD;AAClD,YAAMC,cAAc,GAAGlB,MAAM,CAAC,KAAKe,KAAL,CAAWV,OAAX,CAAmBY,CAAnB,CAAD,CAA7B;AACAJ,MAAAA,OAAO,CAACC,GAAR,CAAYI,cAAc,CAACC,OAAf,CAAuBC,OAAnC;AACA,YAAMC,UAAU,GAAG,MAAMH,cAAc,CAACZ,OAAf,CACtBgB,iBADsB,GAEtBd,IAFsB,CAEjB;AAAEe,QAAAA,IAAI,EAAEb,QAAQ,CAAC,CAAD;AAAhB,OAFiB,CAAzB;AAGAP,MAAAA,KAAK,CAACqB,IAAN,CAAW;AACTC,QAAAA,KAAK,EAAEJ,UAAU,CAAC,CAAD,CADR;AAETK,QAAAA,MAAM,EAAEL,UAAU,CAAC,CAAD,CAFT;AAGTM,QAAAA,WAAW,EAAEN,UAAU,CAAC,CAAD,CAHd;AAITO,QAAAA,KAAK,EAAE,IAJE;AAKTC,QAAAA,KAAK,eACH,KAAC,IAAD;AAAM,UAAA,KAAK,EAAG,YAAW,KAAKd,KAAL,CAAWV,OAAX,CAAmBY,CAAnB,CAAsB,EAA/C;AAAA,iCACE;AAAA,oCACE,KAAC,IAAD;AAAM,cAAA,IAAI,EAAC;AAAX,cADF;AAAA;AADF;AANO,OAAX;AAcD;;AACD,SAAKa,QAAL,CAAc;AAAE3B,MAAAA;AAAF,KAAd;AACD;;AACD4B,EAAAA,aAAa,GAAG;AACd,wBAAO,KAAC,IAAD,CAAM,KAAN;AAAY,MAAA,KAAK,EAAE,KAAKC,KAAL,CAAW7B,KAA9B;AAAqC,MAAA,WAAW,EAAE;AAAlD,MAAP;AACD;;AAED8B,EAAAA,MAAM,GAAG;AACP,wBACE,MAAC,MAAD;AAAA,8BACE,KAAC,IAAD;AAAM,QAAA,KAAK,EAAC,UAAZ;AAAA,+BACE;AAAA,iCACE,KAAC,MAAD;AACE,YAAA,OAAO,EAAC,eADV;AAEE,YAAA,OAAO,EAAC,OAFV;AAGE,YAAA,IAAI,EAAC,YAHP;AAIE,YAAA,OAAO;AAJT;AADF;AADF,QADF,EAYG,KAAKF,aAAL,EAZH;AAAA,MADF;AAgBD;;AAxDiC;;AA2DpC,eAAe7B,WAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Button, Card, Icon } from \"semantic-ui-react\";\r\nimport factory from \"../ethereum/factory\";\r\nimport Layout from \"../components/Layout\";\r\nimport web3 from \"../ethereum/web3\";\r\nimport Record from \"../ethereum/record\";\r\nimport { Link } from \"../routes\";\r\nclass recordIndex extends Component {\r\n  state = {\r\n    items: [],\r\n  };\r\n  static async getInitialProps() {\r\n    const records = await factory.methods.getDeployedRecords().call();\r\n    return { records };\r\n  }\r\n  async componentDidMount() {\r\n    const accounts = await web3.eth.getAccounts();\r\n    const items = [];\r\n    console.log(this.props.records.length);\r\n    for (var i = 0; i < this.props.records.length; i++) {\r\n      const recordInstance = Record(this.props.records[i]);\r\n      console.log(recordInstance.options.address);\r\n      const eachRecord = await recordInstance.methods\r\n        .getNameandAddress()\r\n        .call({ from: accounts[0] });\r\n      items.push({\r\n        image: eachRecord[1],\r\n        header: eachRecord[0],\r\n        description: eachRecord[2],\r\n        fluid: true,\r\n        extra: (\r\n          <Link route={`/Records/${this.props.records[i]}`}>\r\n            <a>\r\n              <Icon name=\"user\" />\r\n              View\r\n            </a>\r\n          </Link>\r\n        ),\r\n      });\r\n    }\r\n    this.setState({ items });\r\n  }\r\n  renderRecords() {\r\n    return <Card.Group items={this.state.items} itemsPerRow={2} />;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Layout>\r\n        <Link route=\"/doctors\">\r\n          <a>\r\n            <Button\r\n              content=\"Create record\"\r\n              floated=\"right\"\r\n              icon=\"add circle\"\r\n              primary\r\n            />\r\n          </a>\r\n        </Link>\r\n\r\n        {this.renderRecords()}\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n\r\nexport default recordIndex;\r\n"]},"metadata":{},"sourceType":"module"}