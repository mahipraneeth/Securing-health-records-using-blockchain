{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport factory from \"../ethereum/factory\";\nimport Layout from \"../components/Layout\";\nimport web3 from \"../ethereum/web3\";\nimport { Component } from \"react\";\nimport { Card, Icon, Image } from \"semantic-ui-react\";\nimport { Link } from \"../routes\";\n\nclass doctor extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"renderDoctors\", async () => {\n      const items = [];\n      await web3.ethereum.enable();\n      const accounts = await web3.eth.getAccounts();\n      const docs = await factory.methods.getDoctors().call({\n        from: accounts[0]\n      });\n      items = docs.map(async address => {\n        const eachDoctor = await factory.methods.docs(address).call({\n          from: accounts[0]\n        });\n        return {\n          image: eachDoctor.imageHash\n        };\n      });\n      return /*#__PURE__*/_jsx(Card.Group, {\n        items: items\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxs(Layout, {\n      children: [/*#__PURE__*/_jsx(\"h3\", {\n        children: \"Select your doctors\"\n      }), this.renderDoctors()]\n    });\n  }\n\n}\n\nexport default doctor;","map":{"version":3,"sources":["F:/Securing health records using blockchain/pages/doctors.js"],"names":["factory","Layout","web3","Component","Card","Icon","Image","Link","doctor","items","ethereum","enable","accounts","eth","getAccounts","docs","methods","getDoctors","call","from","map","address","eachDoctor","image","imageHash","render","renderDoctors"],"mappings":";;;;;AAAA,OAAOA,OAAP,MAAoB,qBAApB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,IAAP,MAAiB,kBAAjB;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAASC,IAAT,EAAeC,IAAf,EAAqBC,KAArB,QAAkC,mBAAlC;AACA,SAASC,IAAT,QAAqB,WAArB;;AAEA,MAAMC,MAAN,SAAqBL,SAArB,CAA+B;AAAA;AAAA;;AAAA,2CACb,YAAY;AAC1B,YAAMM,KAAK,GAAG,EAAd;AACA,YAAMP,IAAI,CAACQ,QAAL,CAAcC,MAAd,EAAN;AACA,YAAMC,QAAQ,GAAG,MAAMV,IAAI,CAACW,GAAL,CAASC,WAAT,EAAvB;AACA,YAAMC,IAAI,GAAG,MAAMf,OAAO,CAACgB,OAAR,CAAgBC,UAAhB,GAA6BC,IAA7B,CAAkC;AAAEC,QAAAA,IAAI,EAAEP,QAAQ,CAAC,CAAD;AAAhB,OAAlC,CAAnB;AACAH,MAAAA,KAAK,GAAGM,IAAI,CAACK,GAAL,CAAS,MAAOC,OAAP,IAAmB;AAClC,cAAMC,UAAU,GAAG,MAAMtB,OAAO,CAACgB,OAAR,CACtBD,IADsB,CACjBM,OADiB,EAEtBH,IAFsB,CAEjB;AAAEC,UAAAA,IAAI,EAAEP,QAAQ,CAAC,CAAD;AAAhB,SAFiB,CAAzB;AAGA,eAAO;AACLW,UAAAA,KAAK,EAAED,UAAU,CAACE;AADb,SAAP;AAGD,OAPO,CAAR;AAQA,0BAAO,KAAC,IAAD,CAAM,KAAN;AAAY,QAAA,KAAK,EAAEf;AAAnB,QAAP;AACD,KAf4B;AAAA;;AAgB7BgB,EAAAA,MAAM,GAAG;AACP,wBACE,MAAC,MAAD;AAAA,8BACE;AAAA;AAAA,QADF,EAEG,KAAKC,aAAL,EAFH;AAAA,MADF;AAMD;;AAvB4B;;AA0B/B,eAAelB,MAAf","sourcesContent":["import factory from \"../ethereum/factory\";\r\nimport Layout from \"../components/Layout\";\r\nimport web3 from \"../ethereum/web3\";\r\nimport { Component } from \"react\";\r\nimport { Card, Icon, Image } from \"semantic-ui-react\";\r\nimport { Link } from \"../routes\";\r\n\r\nclass doctor extends Component {\r\n  renderDoctors = async () => {\r\n    const items = [];\r\n    await web3.ethereum.enable();\r\n    const accounts = await web3.eth.getAccounts();\r\n    const docs = await factory.methods.getDoctors().call({ from: accounts[0] });\r\n    items = docs.map(async (address) => {\r\n      const eachDoctor = await factory.methods\r\n        .docs(address)\r\n        .call({ from: accounts[0] });\r\n      return {\r\n        image: eachDoctor.imageHash,\r\n      };\r\n    });\r\n    return <Card.Group items={items}></Card.Group>;\r\n  };\r\n  render() {\r\n    return (\r\n      <Layout>\r\n        <h3>Select your doctors</h3>\r\n        {this.renderDoctors()}\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n\r\nexport default doctor;\r\n"]},"metadata":{},"sourceType":"module"}