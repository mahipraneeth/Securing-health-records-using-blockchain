{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport factory from \"../ethereum/factory\";\nimport Layout from \"../components/Layout\";\nimport web3 from \"../ethereum/web3\";\nimport { Component } from \"react\";\nimport { Card, Icon, Image } from \"semantic-ui-react\";\nimport { Link } from \"../routes\";\n\nclass doctor extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"renderDoctors\", async () => {\n      const items = [];\n      await web3.ethereum.enable();\n      const accounts = await web3.eth.getAccounts();\n      const docs = await factory.methods.getDoctors().call({\n        from: accounts[0]\n      });\n      items = docs.map(async address => {\n        const eachDoctor = await factory.methods.docs(address).call({\n          from: accounts[0]\n        });\n        return /*#__PURE__*/_jsxs(Card, {\n          children: [/*#__PURE__*/_jsx(Image, {\n            src: eachDoctor.imagehash,\n            wrapped: true,\n            ui: false\n          }), /*#__PURE__*/_jsxs(Card.Content, {\n            children: [/*#__PURE__*/_jsx(Card.Header, {\n              children: eachDoctor.description\n            }), /*#__PURE__*/_jsx(Card.Description, {\n              children: eachDoctor.speciality\n            })]\n          }), /*#__PURE__*/_jsx(Card.Content, {\n            children: /*#__PURE__*/_jsx(Link, {\n              route: `/doctors/${address}`,\n              children: /*#__PURE__*/_jsx(\"a\", {\n                children: \"select\"\n              })\n            })\n          })]\n        });\n      });\n      return /*#__PURE__*/_jsx(Card.Group, {});\n    });\n  }\n\n  render2() {\n    const items = [];\n\n    for (var i = 0; i < 2; i++) {\n      items.push( /*#__PURE__*/_jsxs(Card, {\n        children: [/*#__PURE__*/_jsx(Image, {\n          src: \"\",\n          wrapped: true,\n          ui: false\n        }), /*#__PURE__*/_jsxs(Card.Content, {\n          children: [/*#__PURE__*/_jsx(Card.Header, {\n            children: \"asd\"\n          }), /*#__PURE__*/_jsx(Card.Description, {\n            children: \"asd\"\n          })]\n        }), /*#__PURE__*/_jsx(Card.Content, {\n          children: /*#__PURE__*/_jsx(Link, {\n            route: \"/\",\n            children: /*#__PURE__*/_jsx(\"a\", {\n              children: \"select\"\n            })\n          })\n        })]\n      }));\n    }\n\n    return items;\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxs(Layout, {\n      children: [/*#__PURE__*/_jsx(\"h3\", {\n        children: \"Select your doctors\"\n      }), /*#__PURE__*/_jsx(Card.Group, {})]\n    });\n  }\n\n}\n\nexport default doctor;","map":{"version":3,"sources":["F:/Securing health records using blockchain/pages/doctors.js"],"names":["factory","Layout","web3","Component","Card","Icon","Image","Link","doctor","items","ethereum","enable","accounts","eth","getAccounts","docs","methods","getDoctors","call","from","map","address","eachDoctor","imagehash","description","speciality","render2","i","push","render"],"mappings":";;;;;AAAA,OAAOA,OAAP,MAAoB,qBAApB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,IAAP,MAAiB,kBAAjB;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAASC,IAAT,EAAeC,IAAf,EAAqBC,KAArB,QAAkC,mBAAlC;AACA,SAASC,IAAT,QAAqB,WAArB;;AAEA,MAAMC,MAAN,SAAqBL,SAArB,CAA+B;AAAA;AAAA;;AAAA,2CACb,YAAY;AAC1B,YAAMM,KAAK,GAAG,EAAd;AACA,YAAMP,IAAI,CAACQ,QAAL,CAAcC,MAAd,EAAN;AACA,YAAMC,QAAQ,GAAG,MAAMV,IAAI,CAACW,GAAL,CAASC,WAAT,EAAvB;AACA,YAAMC,IAAI,GAAG,MAAMf,OAAO,CAACgB,OAAR,CAAgBC,UAAhB,GAA6BC,IAA7B,CAAkC;AAAEC,QAAAA,IAAI,EAAEP,QAAQ,CAAC,CAAD;AAAhB,OAAlC,CAAnB;AAEAH,MAAAA,KAAK,GAAGM,IAAI,CAACK,GAAL,CAAS,MAAOC,OAAP,IAAmB;AAClC,cAAMC,UAAU,GAAG,MAAMtB,OAAO,CAACgB,OAAR,CACtBD,IADsB,CACjBM,OADiB,EAEtBH,IAFsB,CAEjB;AAAEC,UAAAA,IAAI,EAAEP,QAAQ,CAAC,CAAD;AAAhB,SAFiB,CAAzB;AAGA,4BACE,MAAC,IAAD;AAAA,kCACE,KAAC,KAAD;AAAO,YAAA,GAAG,EAAEU,UAAU,CAACC,SAAvB;AAAkC,YAAA,OAAO,MAAzC;AAA0C,YAAA,EAAE,EAAE;AAA9C,YADF,eAEE,MAAC,IAAD,CAAM,OAAN;AAAA,oCACE,KAAC,IAAD,CAAM,MAAN;AAAA,wBAAcD,UAAU,CAACE;AAAzB,cADF,eAEE,KAAC,IAAD,CAAM,WAAN;AAAA,wBAAmBF,UAAU,CAACG;AAA9B,cAFF;AAAA,YAFF,eAME,KAAC,IAAD,CAAM,OAAN;AAAA,mCACE,KAAC,IAAD;AAAM,cAAA,KAAK,EAAG,YAAWJ,OAAQ,EAAjC;AAAA,qCACE;AAAA;AAAA;AADF;AADF,YANF;AAAA,UADF;AAcD,OAlBO,CAAR;AAmBA,0BAAO,KAAC,IAAD,CAAM,KAAN,KAAP;AACD,KA3B4B;AAAA;;AA6B7BK,EAAAA,OAAO,GAAG;AACR,UAAMjB,KAAK,GAAG,EAAd;;AACA,SAAK,IAAIkB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuBA,CAAC,EAAxB,EAA4B;AAC1BlB,MAAAA,KAAK,CAACmB,IAAN,eACE,MAAC,IAAD;AAAA,gCACE,KAAC,KAAD;AAAO,UAAA,GAAG,EAAC,EAAX;AAAc,UAAA,OAAO,MAArB;AAAsB,UAAA,EAAE,EAAE;AAA1B,UADF,eAEE,MAAC,IAAD,CAAM,OAAN;AAAA,kCACE,KAAC,IAAD,CAAM,MAAN;AAAA;AAAA,YADF,eAEE,KAAC,IAAD,CAAM,WAAN;AAAA;AAAA,YAFF;AAAA,UAFF,eAME,KAAC,IAAD,CAAM,OAAN;AAAA,iCACE,KAAC,IAAD;AAAM,YAAA,KAAK,EAAC,GAAZ;AAAA,mCACE;AAAA;AAAA;AADF;AADF,UANF;AAAA,QADF;AAcD;;AACD,WAAOnB,KAAP;AACD;;AACDoB,EAAAA,MAAM,GAAG;AACP,wBACE,MAAC,MAAD;AAAA,8BACE;AAAA;AAAA,QADF,eAEE,KAAC,IAAD,CAAM,KAAN,KAFF;AAAA,MADF;AAMD;;AAxD4B;;AA2D/B,eAAerB,MAAf","sourcesContent":["import factory from \"../ethereum/factory\";\r\nimport Layout from \"../components/Layout\";\r\nimport web3 from \"../ethereum/web3\";\r\nimport { Component } from \"react\";\r\nimport { Card, Icon, Image } from \"semantic-ui-react\";\r\nimport { Link } from \"../routes\";\r\n\r\nclass doctor extends Component {\r\n  renderDoctors = async () => {\r\n    const items = [];\r\n    await web3.ethereum.enable();\r\n    const accounts = await web3.eth.getAccounts();\r\n    const docs = await factory.methods.getDoctors().call({ from: accounts[0] });\r\n\r\n    items = docs.map(async (address) => {\r\n      const eachDoctor = await factory.methods\r\n        .docs(address)\r\n        .call({ from: accounts[0] });\r\n      return (\r\n        <Card>\r\n          <Image src={eachDoctor.imagehash} wrapped ui={false} />\r\n          <Card.Content>\r\n            <Card.Header>{eachDoctor.description}</Card.Header>\r\n            <Card.Description>{eachDoctor.speciality}</Card.Description>\r\n          </Card.Content>\r\n          <Card.Content>\r\n            <Link route={`/doctors/${address}`}>\r\n              <a>select</a>\r\n            </Link>\r\n          </Card.Content>\r\n        </Card>\r\n      );\r\n    });\r\n    return <Card.Group></Card.Group>;\r\n  };\r\n\r\n  render2() {\r\n    const items = [];\r\n    for (var i = 0; i < 2; i++) {\r\n      items.push(\r\n        <Card>\r\n          <Image src=\"\" wrapped ui={false} />\r\n          <Card.Content>\r\n            <Card.Header>asd</Card.Header>\r\n            <Card.Description>asd</Card.Description>\r\n          </Card.Content>\r\n          <Card.Content>\r\n            <Link route=\"/\">\r\n              <a>select</a>\r\n            </Link>\r\n          </Card.Content>\r\n        </Card>\r\n      );\r\n    }\r\n    return items;\r\n  }\r\n  render() {\r\n    return (\r\n      <Layout>\r\n        <h3>Select your doctors</h3>\r\n        <Card.Group></Card.Group>\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n\r\nexport default doctor;\r\n"]},"metadata":{},"sourceType":"module"}