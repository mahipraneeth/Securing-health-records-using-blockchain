{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport Link from \"next/link\";\nimport React, { Component } from \"react\";\nimport { Grid, Segment, Label, Image, Card } from \"semantic-ui-react\";\nimport Layout from \"../../components/Layout\";\nimport record from \"../../ethereum/record\";\nimport web3 from \"../../ethereum/web3\";\nimport factory from \"../../ethereum/factory\";\n\nvar recordShow = /*#__PURE__*/function (_Component) {\n  _inherits(recordShow, _Component);\n\n  var _super = _createSuper(recordShow);\n\n  function recordShow() {\n    _classCallCheck(this, recordShow);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(recordShow, [{\n    key: \"renderDoctor\",\n    value: function renderDoctor() {\n      return /*#__PURE__*/_jsx(Card, {\n        image: this.props.doctor.imagehash,\n        header: this.props.doctor.description,\n        description: this.props.doctor.speciality\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      console.log(this.props);\n      return /*#__PURE__*/_jsx(Layout, {\n        children: /*#__PURE__*/_jsx(Grid, {\n          columns: 1,\n          children: /*#__PURE__*/_jsx(Grid.Column, {\n            children: /*#__PURE__*/_jsxs(Segment, {\n              raised: true,\n              children: [/*#__PURE__*/_jsx(Label, {\n                as: \"a\",\n                color: \"red\",\n                ribbon: true,\n                children: \"Overview\"\n              }), /*#__PURE__*/_jsx(\"span\", {\n                children: \"Name and profile image\"\n              }), /*#__PURE__*/_jsx(\"h3\", {\n                children: this.props.NameAndImage[0]\n              }), /*#__PURE__*/_jsx(Image, {\n                style: {\n                  maxWidth: \"150px\",\n                  maxHeight: \"150px\",\n                  display: \"block\"\n                },\n                src: this.props.NameAndImage[1]\n              }), /*#__PURE__*/_jsx(\"p\", {}), /*#__PURE__*/_jsx(Label, {\n                as: \"a\",\n                color: \"blue\",\n                ribbon: true,\n                children: \"Details\"\n              }), /*#__PURE__*/_jsx(\"span\", {\n                children: \"your details\"\n              }), /*#__PURE__*/_jsx(\"p\", {}), /*#__PURE__*/_jsxs(\"p\", {\n                children: [\"Age: \", this.props.details[1]]\n              }), /*#__PURE__*/_jsxs(\"p\", {\n                children: [\"height: \", this.props.details[2]]\n              }), /*#__PURE__*/_jsxs(\"p\", {\n                children: [\"weight: \", this.props.details[3]]\n              }), /*#__PURE__*/_jsxs(\"p\", {\n                children: [\"gender: \", this.props.details[4]]\n              }), /*#__PURE__*/_jsx(Label, {\n                as: \"a\",\n                color: \"orange\",\n                ribbon: true,\n                children: \"prescription links\"\n              }), /*#__PURE__*/_jsx(\"p\", {\n                children: this.props.prescriptions\n              }), /*#__PURE__*/_jsx(Label, {\n                as: \"a\",\n                color: \"teal\",\n                ribbon: true,\n                children: \"report links\"\n              }), /*#__PURE__*/_jsx(\"p\", {\n                children: this.props.reports\n              }), /*#__PURE__*/_jsx(Label, {\n                as: \"a\",\n                color: \"pink\",\n                ribbon: true,\n                children: \"report links\"\n              }), this.renderDoctor()]\n            })\n          })\n        })\n      });\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function () {\n      var _getInitialProps = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(props) {\n        var accounts, currentRecord, NameAndImage, doctor, details, prescriptionlength, reportLength, prescriptions, i, prescriptionlink, reports, reportLink;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return web3.eth.getAccounts();\n\n              case 2:\n                accounts = _context.sent;\n                currentRecord = record(props.query.address);\n                _context.next = 6;\n                return currentRecord.methods.getNameandAddress().call({\n                  from: accounts[0]\n                });\n\n              case 6:\n                NameAndImage = _context.sent;\n                _context.next = 9;\n                return factory.methods.docs(NameAndImage[3]).call();\n\n              case 9:\n                doctor = _context.sent;\n                _context.next = 12;\n                return currentRecord.methods.getDetails().call({\n                  from: accounts[0]\n                });\n\n              case 12:\n                details = _context.sent;\n                _context.next = 15;\n                return currentRecord.methods.getPrescriptionLength().call({\n                  from: accounts[0]\n                });\n\n              case 15:\n                prescriptionlength = _context.sent;\n                _context.next = 18;\n                return currentRecord.methods.getReportLength().call({\n                  from: accounts[0]\n                });\n\n              case 18:\n                reportLength = _context.sent;\n                prescriptions = [];\n                i = 0;\n\n              case 21:\n                if (!(i < prescriptionlength)) {\n                  _context.next = 29;\n                  break;\n                }\n\n                _context.next = 24;\n                return currentRecord.methods.getPrescription(i).call({\n                  from: accounts[0]\n                });\n\n              case 24:\n                prescriptionlink = _context.sent;\n                prescriptions.push( /*#__PURE__*/_jsx(Link, {\n                  href: prescriptionlink,\n                  children: /*#__PURE__*/_jsxs(\"a\", {\n                    target: \"_blank\",\n                    children: [\"prescription \", i + 1]\n                  })\n                }));\n\n              case 26:\n                i++;\n                _context.next = 21;\n                break;\n\n              case 29:\n                reports = [];\n                i = 0;\n\n              case 31:\n                if (!(i < reportLength)) {\n                  _context.next = 39;\n                  break;\n                }\n\n                _context.next = 34;\n                return currentRecord.methods.getReport(i).call({\n                  from: accounts[0]\n                });\n\n              case 34:\n                reportLink = _context.sent;\n                reports.push( /*#__PURE__*/_jsx(Link, {\n                  href: reportLink,\n                  children: /*#__PURE__*/_jsxs(\"a\", {\n                    target: \"_blank\",\n                    children: [\"report \", i + 1]\n                  })\n                }));\n\n              case 36:\n                i++;\n                _context.next = 31;\n                break;\n\n              case 39:\n                return _context.abrupt(\"return\", {\n                  NameAndImage: NameAndImage,\n                  details: details,\n                  accounts: accounts,\n                  reports: reports,\n                  prescriptions: prescriptions,\n                  doctor: doctor\n                });\n\n              case 40:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function getInitialProps(_x) {\n        return _getInitialProps.apply(this, arguments);\n      }\n\n      return getInitialProps;\n    }()\n  }]);\n\n  return recordShow;\n}(Component);\n\nexport default recordShow;","map":{"version":3,"sources":["F:/Securing health records using blockchain/pages/Records/show.js"],"names":["Link","React","Component","Grid","Segment","Label","Image","Card","Layout","record","web3","factory","recordShow","props","doctor","imagehash","description","speciality","console","log","NameAndImage","maxWidth","maxHeight","display","details","prescriptions","reports","renderDoctor","eth","getAccounts","accounts","currentRecord","query","address","methods","getNameandAddress","call","from","docs","getDetails","getPrescriptionLength","prescriptionlength","getReportLength","reportLength","i","getPrescription","prescriptionlink","push","getReport","reportLink"],"mappings":"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","sourcesContent":["import Link from \"next/link\";\r\nimport React, { Component } from \"react\";\r\nimport { Grid, Segment, Label, Image, Card } from \"semantic-ui-react\";\r\nimport Layout from \"../../components/Layout\";\r\nimport record from \"../../ethereum/record\";\r\nimport web3 from \"../../ethereum/web3\";\r\nimport factory from \"../../ethereum/factory\";\r\n\r\nclass recordShow extends Component {\r\n  static async getInitialProps(props) {\r\n    const accounts = await web3.eth.getAccounts();\r\n    const currentRecord = record(props.query.address);\r\n    const NameAndImage = await currentRecord.methods\r\n      .getNameandAddress()\r\n      .call({ from: accounts[0] });\r\n    const doctor = await factory.methods.docs(NameAndImage[3]).call();\r\n    const details = await currentRecord.methods\r\n      .getDetails()\r\n      .call({ from: accounts[0] });\r\n    const prescriptionlength = await currentRecord.methods\r\n      .getPrescriptionLength()\r\n      .call({ from: accounts[0] });\r\n    const reportLength = await currentRecord.methods\r\n      .getReportLength()\r\n      .call({ from: accounts[0] });\r\n    const prescriptions = [];\r\n    for (var i = 0; i < prescriptionlength; i++) {\r\n      const prescriptionlink = await currentRecord.methods\r\n        .getPrescription(i)\r\n        .call({ from: accounts[0] });\r\n      prescriptions.push(\r\n        <Link href={prescriptionlink}>\r\n          <a target=\"_blank\">prescription {i + 1}</a>\r\n        </Link>\r\n      );\r\n    }\r\n    const reports = [];\r\n    for (var i = 0; i < reportLength; i++) {\r\n      const reportLink = await currentRecord.methods\r\n        .getReport(i)\r\n        .call({ from: accounts[0] });\r\n      reports.push(\r\n        <Link href={reportLink}>\r\n          <a target=\"_blank\">report {i + 1}</a>\r\n        </Link>\r\n      );\r\n    }\r\n    return { NameAndImage, details, accounts, reports, prescriptions, doctor };\r\n  }\r\n  renderDoctor() {\r\n    return (\r\n      <Card\r\n        image={this.props.doctor.imagehash}\r\n        header={this.props.doctor.description}\r\n        description={this.props.doctor.speciality}\r\n      />\r\n    );\r\n  }\r\n  render() {\r\n    console.log(this.props);\r\n    return (\r\n      <Layout>\r\n        <Grid columns={1}>\r\n          <Grid.Column>\r\n            <Segment raised>\r\n              <Label as=\"a\" color=\"red\" ribbon>\r\n                Overview\r\n              </Label>\r\n              <span>Name and profile image</span>\r\n              <h3>{this.props.NameAndImage[0]}</h3>\r\n\r\n              <Image\r\n                style={{\r\n                  maxWidth: \"150px\",\r\n                  maxHeight: \"150px\",\r\n                  display: \"block\",\r\n                }}\r\n                src={this.props.NameAndImage[1]}\r\n              />\r\n              <p></p>\r\n              <Label as=\"a\" color=\"blue\" ribbon>\r\n                Details\r\n              </Label>\r\n              <span>your details</span>\r\n              <p></p>\r\n              <p>Age: {this.props.details[1]}</p>\r\n              <p>height: {this.props.details[2]}</p>\r\n              <p>weight: {this.props.details[3]}</p>\r\n              <p>gender: {this.props.details[4]}</p>\r\n              <Label as=\"a\" color=\"orange\" ribbon>\r\n                prescription links\r\n              </Label>\r\n              <p>{this.props.prescriptions}</p>\r\n              <Label as=\"a\" color=\"teal\" ribbon>\r\n                report links\r\n              </Label>\r\n              <p>{this.props.reports}</p>\r\n              <Label as=\"a\" color=\"pink\" ribbon>\r\n                report links\r\n              </Label>\r\n              {this.renderDoctor()}\r\n            </Segment>\r\n          </Grid.Column>\r\n        </Grid>\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n\r\nexport default recordShow;\r\n"]},"metadata":{},"sourceType":"module"}