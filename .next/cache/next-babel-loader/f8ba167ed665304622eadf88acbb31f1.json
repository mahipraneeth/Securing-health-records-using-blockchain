{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport factory from \"../ethereum/factory\";\nimport Layout from \"../components/Layout\";\nimport web3 from \"../ethereum/web3\";\nimport { Component } from \"react\";\nimport { Card, Icon, Image } from \"semantic-ui-react\";\nimport { Link } from \"../routes\";\n\nclass doctor extends Component {\n  async renderDoctors() {\n    const items = [];\n    console.log(web3);\n    await web3.ethereum.enable();\n    const accounts = await web3.eth.getAccounts();\n    const docs = await factory.methods.getDoctors().call({\n      from: accounts[0]\n    });\n    console.log(docs);\n    items = docs.map(async address => {\n      const eachDoctor = await factory.methods.docs(address).call({\n        from: accounts[0]\n      });\n      return /*#__PURE__*/_jsxs(Card, {\n        children: [/*#__PURE__*/_jsx(Image, {\n          src: eachDoctor.imagehash,\n          wrapped: true,\n          ui: false\n        }), /*#__PURE__*/_jsxs(Card.Content, {\n          children: [/*#__PURE__*/_jsx(Card.Header, {\n            children: eachDoctor.description\n          }), /*#__PURE__*/_jsx(Card.Description, {\n            children: eachDoctor.speciality\n          })]\n        }), /*#__PURE__*/_jsx(Card.Content, {\n          children: /*#__PURE__*/_jsx(Link, {\n            route: `/doctors/${address}`,\n            children: /*#__PURE__*/_jsx(\"a\", {\n              children: \"select\"\n            })\n          })\n        })]\n      });\n    });\n    return /*#__PURE__*/_jsx(Card.Group, {\n      items: items\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxs(Layout, {\n      children: [/*#__PURE__*/_jsx(\"h3\", {\n        children: \"Select your doctors\"\n      }), this.renderDoctors()]\n    });\n  }\n\n}\n\nexport default doctor;","map":{"version":3,"sources":["F:/Securing health records using blockchain/pages/doctors.js"],"names":["factory","Layout","web3","Component","Card","Icon","Image","Link","doctor","renderDoctors","items","console","log","ethereum","enable","accounts","eth","getAccounts","docs","methods","getDoctors","call","from","map","address","eachDoctor","imagehash","description","speciality","render"],"mappings":";;AAAA,OAAOA,OAAP,MAAoB,qBAApB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,IAAP,MAAiB,kBAAjB;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAASC,IAAT,EAAeC,IAAf,EAAqBC,KAArB,QAAkC,mBAAlC;AACA,SAASC,IAAT,QAAqB,WAArB;;AAEA,MAAMC,MAAN,SAAqBL,SAArB,CAA+B;AAC7B,QAAMM,aAAN,GAAsB;AACpB,UAAMC,KAAK,GAAG,EAAd;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYV,IAAZ;AACA,UAAMA,IAAI,CAACW,QAAL,CAAcC,MAAd,EAAN;AACA,UAAMC,QAAQ,GAAG,MAAMb,IAAI,CAACc,GAAL,CAASC,WAAT,EAAvB;AACA,UAAMC,IAAI,GAAG,MAAMlB,OAAO,CAACmB,OAAR,CAAgBC,UAAhB,GAA6BC,IAA7B,CAAkC;AAAEC,MAAAA,IAAI,EAAEP,QAAQ,CAAC,CAAD;AAAhB,KAAlC,CAAnB;AACAJ,IAAAA,OAAO,CAACC,GAAR,CAAYM,IAAZ;AAEAR,IAAAA,KAAK,GAAGQ,IAAI,CAACK,GAAL,CAAS,MAAOC,OAAP,IAAmB;AAClC,YAAMC,UAAU,GAAG,MAAMzB,OAAO,CAACmB,OAAR,CACtBD,IADsB,CACjBM,OADiB,EAEtBH,IAFsB,CAEjB;AAAEC,QAAAA,IAAI,EAAEP,QAAQ,CAAC,CAAD;AAAhB,OAFiB,CAAzB;AAGA,0BACE,MAAC,IAAD;AAAA,gCACE,KAAC,KAAD;AAAO,UAAA,GAAG,EAAEU,UAAU,CAACC,SAAvB;AAAkC,UAAA,OAAO,MAAzC;AAA0C,UAAA,EAAE,EAAE;AAA9C,UADF,eAEE,MAAC,IAAD,CAAM,OAAN;AAAA,kCACE,KAAC,IAAD,CAAM,MAAN;AAAA,sBAAcD,UAAU,CAACE;AAAzB,YADF,eAEE,KAAC,IAAD,CAAM,WAAN;AAAA,sBAAmBF,UAAU,CAACG;AAA9B,YAFF;AAAA,UAFF,eAME,KAAC,IAAD,CAAM,OAAN;AAAA,iCACE,KAAC,IAAD;AAAM,YAAA,KAAK,EAAG,YAAWJ,OAAQ,EAAjC;AAAA,mCACE;AAAA;AAAA;AADF;AADF,UANF;AAAA,QADF;AAcD,KAlBO,CAAR;AAmBA,wBAAO,KAAC,IAAD,CAAM,KAAN;AAAY,MAAA,KAAK,EAAEd;AAAnB,MAAP;AACD;;AACDmB,EAAAA,MAAM,GAAG;AACP,wBACE,MAAC,MAAD;AAAA,8BACE;AAAA;AAAA,QADF,EAEG,KAAKpB,aAAL,EAFH;AAAA,MADF;AAMD;;AArC4B;;AAwC/B,eAAeD,MAAf","sourcesContent":["import factory from \"../ethereum/factory\";\r\nimport Layout from \"../components/Layout\";\r\nimport web3 from \"../ethereum/web3\";\r\nimport { Component } from \"react\";\r\nimport { Card, Icon, Image } from \"semantic-ui-react\";\r\nimport { Link } from \"../routes\";\r\n\r\nclass doctor extends Component {\r\n  async renderDoctors() {\r\n    const items = [];\r\n    console.log(web3);\r\n    await web3.ethereum.enable();\r\n    const accounts = await web3.eth.getAccounts();\r\n    const docs = await factory.methods.getDoctors().call({ from: accounts[0] });\r\n    console.log(docs);\r\n\r\n    items = docs.map(async (address) => {\r\n      const eachDoctor = await factory.methods\r\n        .docs(address)\r\n        .call({ from: accounts[0] });\r\n      return (\r\n        <Card>\r\n          <Image src={eachDoctor.imagehash} wrapped ui={false} />\r\n          <Card.Content>\r\n            <Card.Header>{eachDoctor.description}</Card.Header>\r\n            <Card.Description>{eachDoctor.speciality}</Card.Description>\r\n          </Card.Content>\r\n          <Card.Content>\r\n            <Link route={`/doctors/${address}`}>\r\n              <a>select</a>\r\n            </Link>\r\n          </Card.Content>\r\n        </Card>\r\n      );\r\n    });\r\n    return <Card.Group items={items} />;\r\n  }\r\n  render() {\r\n    return (\r\n      <Layout>\r\n        <h3>Select your doctors</h3>\r\n        {this.renderDoctors()}\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n\r\nexport default doctor;\r\n"]},"metadata":{},"sourceType":"module"}