{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport Link from \"next/link\";\nimport React, { Component } from \"react\";\nimport { Grid, Segment, Label, Image } from \"semantic-ui-react\";\nimport Layout from \"../../components/Layout\";\nimport record from \"../../ethereum/record\";\nimport web3 from \"../../ethereum/web3\";\n\nclass recordShow extends Component {\n  static async getInitialProps(props) {\n    const accounts = await web3.eth.getAccounts();\n    const currentRecord = record(props.query.address);\n    const NameAndImage = await currentRecord.methods.getNameandAddress().call({\n      from: accounts[0]\n    });\n    const details = await currentRecord.methods.getDetails().call({\n      from: accounts[0]\n    });\n    const prescriptionlength = await currentRecord.methods.getPrescriptionLength().call({\n      from: accounts[0]\n    });\n    const reportLength = await currentRecord.methods.getReportLength().call({\n      from: accounts[0]\n    });\n    const prescriptions = [];\n\n    for (var i = 0; i < prescriptionlength; i++) {\n      const prescriptionlink = await currentRecord.methods.getPrescription(i).call({\n        from: accounts[0]\n      });\n      prescriptions.push( /*#__PURE__*/_jsx(Link, {\n        href: prescriptionlink,\n        target: \"_blank\",\n        children: /*#__PURE__*/_jsxs(\"a\", {\n          children: [\"prescription \", i + 1]\n        })\n      }));\n    }\n\n    const reports = [];\n\n    for (var i = 0; i < reportLength; i++) {\n      const reportLink = await currentRecord.methods.getReport(i).call({\n        from: accounts[0]\n      });\n      reports.push( /*#__PURE__*/_jsx(Link, {\n        href: reportLink,\n        children: /*#__PURE__*/_jsxs(\"a\", {\n          children: [\"report \", i + 1]\n        })\n      }));\n    }\n\n    return {\n      NameAndImage,\n      details,\n      accounts,\n      reports,\n      prescriptions\n    };\n  }\n\n  render() {\n    console.log(this.props);\n    return /*#__PURE__*/_jsx(Layout, {\n      children: /*#__PURE__*/_jsxs(Grid, {\n        columns: 2,\n        children: [/*#__PURE__*/_jsx(Grid.Column, {\n          children: /*#__PURE__*/_jsxs(Segment, {\n            raised: true,\n            children: [/*#__PURE__*/_jsx(Label, {\n              as: \"a\",\n              color: \"red\",\n              ribbon: true,\n              children: \"Overview\"\n            }), /*#__PURE__*/_jsx(\"span\", {\n              children: \"Name and profile image\"\n            }), /*#__PURE__*/_jsx(\"h3\", {\n              children: this.props.NameAndImage[0]\n            }), /*#__PURE__*/_jsx(Image, {\n              src: this.props.NameAndImage[1]\n            }), /*#__PURE__*/_jsx(Label, {\n              as: \"a\",\n              color: \"blue\",\n              ribbon: true,\n              children: \"Details\"\n            }), /*#__PURE__*/_jsx(\"span\", {\n              children: \"your details\"\n            }), /*#__PURE__*/_jsxs(\"h3\", {\n              children: [\"Age: \", this.props.details[1]]\n            }), /*#__PURE__*/_jsxs(\"h3\", {\n              children: [\"height: \", this.props.details[2]]\n            }), /*#__PURE__*/_jsxs(\"h3\", {\n              children: [\"weight: \", this.props.details[3]]\n            }), /*#__PURE__*/_jsxs(\"h3\", {\n              children: [\"gender: \", this.props.details[4]]\n            })]\n          })\n        }), /*#__PURE__*/_jsx(Grid.Column, {\n          children: /*#__PURE__*/_jsxs(Segment, {\n            raised: true,\n            children: [/*#__PURE__*/_jsx(Label, {\n              as: \"a\",\n              color: \"orange\",\n              ribbon: \"right\",\n              children: \"prescription links\"\n            }), /*#__PURE__*/_jsx(\"p\", {\n              children: this.props.prescriptions\n            })]\n          })\n        })]\n      })\n    });\n  }\n\n}\n\nexport default recordShow;","map":{"version":3,"sources":["F:/Securing health records using blockchain/pages/Records/show.js"],"names":["Link","React","Component","Grid","Segment","Label","Image","Layout","record","web3","recordShow","getInitialProps","props","accounts","eth","getAccounts","currentRecord","query","address","NameAndImage","methods","getNameandAddress","call","from","details","getDetails","prescriptionlength","getPrescriptionLength","reportLength","getReportLength","prescriptions","i","prescriptionlink","getPrescription","push","reports","reportLink","getReport","render","console","log"],"mappings":"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","sourcesContent":["import Link from \"next/link\";\r\nimport React, { Component } from \"react\";\r\nimport { Grid, Segment, Label, Image } from \"semantic-ui-react\";\r\nimport Layout from \"../../components/Layout\";\r\nimport record from \"../../ethereum/record\";\r\nimport web3 from \"../../ethereum/web3\";\r\n\r\nclass recordShow extends Component {\r\n  static async getInitialProps(props) {\r\n    const accounts = await web3.eth.getAccounts();\r\n    const currentRecord = record(props.query.address);\r\n    const NameAndImage = await currentRecord.methods\r\n      .getNameandAddress()\r\n      .call({ from: accounts[0] });\r\n    const details = await currentRecord.methods\r\n      .getDetails()\r\n      .call({ from: accounts[0] });\r\n    const prescriptionlength = await currentRecord.methods\r\n      .getPrescriptionLength()\r\n      .call({ from: accounts[0] });\r\n    const reportLength = await currentRecord.methods\r\n      .getReportLength()\r\n      .call({ from: accounts[0] });\r\n    const prescriptions = [];\r\n    for (var i = 0; i < prescriptionlength; i++) {\r\n      const prescriptionlink = await currentRecord.methods\r\n        .getPrescription(i)\r\n        .call({ from: accounts[0] });\r\n      prescriptions.push(\r\n        <Link href={prescriptionlink} target=\"_blank\">\r\n          <a>prescription {i + 1}</a>\r\n        </Link>\r\n      );\r\n    }\r\n    const reports = [];\r\n    for (var i = 0; i < reportLength; i++) {\r\n      const reportLink = await currentRecord.methods\r\n        .getReport(i)\r\n        .call({ from: accounts[0] });\r\n      reports.push(\r\n        <Link href={reportLink}>\r\n          <a>report {i + 1}</a>\r\n        </Link>\r\n      );\r\n    }\r\n    return { NameAndImage, details, accounts, reports, prescriptions };\r\n  }\r\n  render() {\r\n    console.log(this.props);\r\n    return (\r\n      <Layout>\r\n        <Grid columns={2}>\r\n          <Grid.Column>\r\n            <Segment raised>\r\n              <Label as=\"a\" color=\"red\" ribbon>\r\n                Overview\r\n              </Label>\r\n              <span>Name and profile image</span>\r\n              <h3>{this.props.NameAndImage[0]}</h3>\r\n              <Image src={this.props.NameAndImage[1]} />\r\n              <Label as=\"a\" color=\"blue\" ribbon>\r\n                Details\r\n              </Label>\r\n              <span>your details</span>\r\n              <h3>Age: {this.props.details[1]}</h3>\r\n              <h3>height: {this.props.details[2]}</h3>\r\n              <h3>weight: {this.props.details[3]}</h3>\r\n              <h3>gender: {this.props.details[4]}</h3>\r\n            </Segment>\r\n          </Grid.Column>\r\n          <Grid.Column>\r\n            <Segment raised>\r\n              <Label as=\"a\" color=\"orange\" ribbon=\"right\">\r\n                prescription links\r\n              </Label>\r\n              <p>{this.props.prescriptions}</p>\r\n            </Segment>\r\n          </Grid.Column>\r\n        </Grid>\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n\r\nexport default recordShow;\r\n"]},"metadata":{},"sourceType":"module"}