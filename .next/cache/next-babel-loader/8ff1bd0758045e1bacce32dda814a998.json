{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport Link from \"next/link\";\nimport React, { Component } from \"react\";\nimport { Grid, Segment } from \"semantic-ui-react\";\nimport Layout from \"../../components/Layout\";\nimport record from \"../../ethereum/record\";\nimport web3 from \"../../ethereum/web3\";\n\nvar recordShow = /*#__PURE__*/function (_Component) {\n  _inherits(recordShow, _Component);\n\n  var _super = _createSuper(recordShow);\n\n  function recordShow() {\n    _classCallCheck(this, recordShow);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(recordShow, [{\n    key: \"render\",\n    value: function render() {\n      console.log(this.props);\n      return /*#__PURE__*/_jsxs(Layout, {\n        children: [/*#__PURE__*/_jsx(\"h1\", {\n          children: \"Your details are here!!\"\n        }), /*#__PURE__*/_jsx(Grid, {\n          columns: 2,\n          children: /*#__PURE__*/_jsx(Grid.Column, {\n            children: /*#__PURE__*/_jsx(Segment, {\n              raised: true,\n              children: /*#__PURE__*/_jsx(Label, {\n                as: \"a\",\n                color: \"red\",\n                ribbon: true,\n                children: \"Overview\"\n              })\n            })\n          })\n        })]\n      });\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function () {\n      var _getInitialProps = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(props) {\n        var accounts, currentRecord, NameAndImage, details, prescriptionlength, reportLength, prescriptions, i, prescriptionlink, reports, reportLink;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return web3.eth.getAccounts();\n\n              case 2:\n                accounts = _context.sent;\n                currentRecord = record(props.query.address);\n                _context.next = 6;\n                return currentRecord.methods.getNameandAddress().call({\n                  from: accounts[0]\n                });\n\n              case 6:\n                NameAndImage = _context.sent;\n                _context.next = 9;\n                return currentRecord.methods.getDetails().call({\n                  from: accounts[0]\n                });\n\n              case 9:\n                details = _context.sent;\n                _context.next = 12;\n                return currentRecord.methods.getPrescriptionLength().call({\n                  from: accounts[0]\n                });\n\n              case 12:\n                prescriptionlength = _context.sent;\n                _context.next = 15;\n                return currentRecord.methods.getReportLength().call({\n                  from: accounts[0]\n                });\n\n              case 15:\n                reportLength = _context.sent;\n                prescriptions = [];\n                i = 0;\n\n              case 18:\n                if (!(i < prescriptionlength)) {\n                  _context.next = 26;\n                  break;\n                }\n\n                _context.next = 21;\n                return currentRecord.methods.getPrescription(i).call({\n                  from: accounts[0]\n                });\n\n              case 21:\n                prescriptionlink = _context.sent;\n                prescriptions.push( /*#__PURE__*/_jsx(Link, {\n                  href: prescriptionlink,\n                  children: /*#__PURE__*/_jsxs(\"a\", {\n                    children: [\"prescription+\", i + 1]\n                  })\n                }));\n\n              case 23:\n                i++;\n                _context.next = 18;\n                break;\n\n              case 26:\n                reports = [];\n                i = 0;\n\n              case 28:\n                if (!(i < reportLength)) {\n                  _context.next = 36;\n                  break;\n                }\n\n                _context.next = 31;\n                return currentRecord.methods.getReport(i).call({\n                  from: accounts[0]\n                });\n\n              case 31:\n                reportLink = _context.sent;\n                reports.push( /*#__PURE__*/_jsx(Link, {\n                  href: reportLink,\n                  children: /*#__PURE__*/_jsxs(\"a\", {\n                    children: [\"report+\", i + 1]\n                  })\n                }));\n\n              case 33:\n                i++;\n                _context.next = 28;\n                break;\n\n              case 36:\n                return _context.abrupt(\"return\", {\n                  NameAndImage: NameAndImage,\n                  details: details,\n                  accounts: accounts,\n                  reports: reports,\n                  prescriptions: prescriptions\n                });\n\n              case 37:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function getInitialProps(_x) {\n        return _getInitialProps.apply(this, arguments);\n      }\n\n      return getInitialProps;\n    }()\n  }]);\n\n  return recordShow;\n}(Component);\n\nexport default recordShow;","map":{"version":3,"sources":["F:/Securing health records using blockchain/pages/Records/show.js"],"names":["Link","React","Component","Grid","Segment","Layout","record","web3","recordShow","console","log","props","eth","getAccounts","accounts","currentRecord","query","address","methods","getNameandAddress","call","from","NameAndImage","getDetails","details","getPrescriptionLength","prescriptionlength","getReportLength","reportLength","prescriptions","i","getPrescription","prescriptionlink","push","reports","getReport","reportLink"],"mappings":"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","sourcesContent":["import Link from \"next/link\";\r\nimport React, { Component } from \"react\";\r\nimport { Grid, Segment } from \"semantic-ui-react\";\r\nimport Layout from \"../../components/Layout\";\r\nimport record from \"../../ethereum/record\";\r\nimport web3 from \"../../ethereum/web3\";\r\n\r\nclass recordShow extends Component {\r\n  static async getInitialProps(props) {\r\n    const accounts = await web3.eth.getAccounts();\r\n    const currentRecord = record(props.query.address);\r\n    const NameAndImage = await currentRecord.methods\r\n      .getNameandAddress()\r\n      .call({ from: accounts[0] });\r\n    const details = await currentRecord.methods\r\n      .getDetails()\r\n      .call({ from: accounts[0] });\r\n    const prescriptionlength = await currentRecord.methods\r\n      .getPrescriptionLength()\r\n      .call({ from: accounts[0] });\r\n    const reportLength = await currentRecord.methods\r\n      .getReportLength()\r\n      .call({ from: accounts[0] });\r\n    const prescriptions = [];\r\n    for (var i = 0; i < prescriptionlength; i++) {\r\n      const prescriptionlink = await currentRecord.methods\r\n        .getPrescription(i)\r\n        .call({ from: accounts[0] });\r\n      prescriptions.push(\r\n        <Link href={prescriptionlink}>\r\n          <a>prescription+{i + 1}</a>\r\n        </Link>\r\n      );\r\n    }\r\n    const reports = [];\r\n    for (var i = 0; i < reportLength; i++) {\r\n      const reportLink = await currentRecord.methods\r\n        .getReport(i)\r\n        .call({ from: accounts[0] });\r\n      reports.push(\r\n        <Link href={reportLink}>\r\n          <a>report+{i + 1}</a>\r\n        </Link>\r\n      );\r\n    }\r\n    return { NameAndImage, details, accounts, reports, prescriptions };\r\n  }\r\n  render() {\r\n    console.log(this.props);\r\n    return (\r\n      <Layout>\r\n        <h1>Your details are here!!</h1>\r\n        <Grid columns={2}>\r\n          <Grid.Column>\r\n            <Segment raised>\r\n              <Label as=\"a\" color=\"red\" ribbon>\r\n                Overview\r\n              </Label>\r\n            </Segment>\r\n          </Grid.Column>\r\n        </Grid>\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n\r\nexport default recordShow;\r\n"]},"metadata":{},"sourceType":"module"}