{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport React, { Component } from \"react\";\nimport Layout from \"../../components/Layout\";\nimport record from \"../../ethereum/record\";\nimport web3 from \"../../ethereum/web3\";\n\nclass recordShow extends Component {\n  static async getInitialProps(props) {\n    const accounts = await web3.eth.getAccounts();\n    const currentRecord = record(props.query.address);\n    const NameAndImage = await currentRecord.methods.getNameandAddress().call({\n      from: accounts[0]\n    });\n    const details = await currentRecord.methods.getDetails().call({\n      from: accounts[0]\n    });\n    const prescriptionlength = await currentRecord.methods.getPrescriptionLength().call({\n      from: accounts[0]\n    });\n    const reportLength = await currentRecord.methods.getReportLength().call({\n      from: accounts[0]\n    });\n    const prescriptions = [];\n\n    for (var i = 0; i < prescriptionlength; i++) {\n      prescriptions.push(await currentRecord.methods.getPrescription(i).call({\n        from: accounts[0]\n      }));\n    }\n\n    const reports = [];\n\n    for (var i = 0; i < reportLength; i++) {\n      const reportLink = await currentRecord.methods.getReport(i).call({\n        from: accounts[0]\n      });\n      reports.push();\n    }\n\n    return {\n      NameAndImage,\n      details,\n      accounts,\n      reports,\n      prescriptions\n    };\n  }\n\n  render() {\n    console.log(this.props);\n    return /*#__PURE__*/_jsx(Layout, {\n      children: /*#__PURE__*/_jsx(\"h1\", {\n        children: \"Your details are here!!\"\n      })\n    });\n  }\n\n}\n\nexport default recordShow;","map":{"version":3,"sources":["F:/Securing health records using blockchain/pages/Records/show.js"],"names":["React","Component","Layout","record","web3","recordShow","getInitialProps","props","accounts","eth","getAccounts","currentRecord","query","address","NameAndImage","methods","getNameandAddress","call","from","details","getDetails","prescriptionlength","getPrescriptionLength","reportLength","getReportLength","prescriptions","i","push","getPrescription","reports","reportLink","getReport","render","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAOC,MAAP,MAAmB,uBAAnB;AACA,OAAOC,IAAP,MAAiB,qBAAjB;;AAEA,MAAMC,UAAN,SAAyBJ,SAAzB,CAAmC;AACjC,eAAaK,eAAb,CAA6BC,KAA7B,EAAoC;AAClC,UAAMC,QAAQ,GAAG,MAAMJ,IAAI,CAACK,GAAL,CAASC,WAAT,EAAvB;AACA,UAAMC,aAAa,GAAGR,MAAM,CAACI,KAAK,CAACK,KAAN,CAAYC,OAAb,CAA5B;AACA,UAAMC,YAAY,GAAG,MAAMH,aAAa,CAACI,OAAd,CACxBC,iBADwB,GAExBC,IAFwB,CAEnB;AAAEC,MAAAA,IAAI,EAAEV,QAAQ,CAAC,CAAD;AAAhB,KAFmB,CAA3B;AAGA,UAAMW,OAAO,GAAG,MAAMR,aAAa,CAACI,OAAd,CACnBK,UADmB,GAEnBH,IAFmB,CAEd;AAAEC,MAAAA,IAAI,EAAEV,QAAQ,CAAC,CAAD;AAAhB,KAFc,CAAtB;AAGA,UAAMa,kBAAkB,GAAG,MAAMV,aAAa,CAACI,OAAd,CAC9BO,qBAD8B,GAE9BL,IAF8B,CAEzB;AAAEC,MAAAA,IAAI,EAAEV,QAAQ,CAAC,CAAD;AAAhB,KAFyB,CAAjC;AAGA,UAAMe,YAAY,GAAG,MAAMZ,aAAa,CAACI,OAAd,CACxBS,eADwB,GAExBP,IAFwB,CAEnB;AAAEC,MAAAA,IAAI,EAAEV,QAAQ,CAAC,CAAD;AAAhB,KAFmB,CAA3B;AAGA,UAAMiB,aAAa,GAAG,EAAtB;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGL,kBAApB,EAAwCK,CAAC,EAAzC,EAA6C;AAC3CD,MAAAA,aAAa,CAACE,IAAd,CACE,MAAMhB,aAAa,CAACI,OAAd,CACHa,eADG,CACaF,CADb,EAEHT,IAFG,CAEE;AAAEC,QAAAA,IAAI,EAAEV,QAAQ,CAAC,CAAD;AAAhB,OAFF,CADR;AAKD;;AACD,UAAMqB,OAAO,GAAG,EAAhB;;AACA,SAAK,IAAIH,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,YAApB,EAAkCG,CAAC,EAAnC,EAAuC;AACrC,YAAMI,UAAU,GAAG,MAAMnB,aAAa,CAACI,OAAd,CACtBgB,SADsB,CACZL,CADY,EAEtBT,IAFsB,CAEjB;AAAEC,QAAAA,IAAI,EAAEV,QAAQ,CAAC,CAAD;AAAhB,OAFiB,CAAzB;AAGAqB,MAAAA,OAAO,CAACF,IAAR;AACD;;AACD,WAAO;AAAEb,MAAAA,YAAF;AAAgBK,MAAAA,OAAhB;AAAyBX,MAAAA,QAAzB;AAAmCqB,MAAAA,OAAnC;AAA4CJ,MAAAA;AAA5C,KAAP;AACD;;AACDO,EAAAA,MAAM,GAAG;AACPC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAK3B,KAAjB;AACA,wBACE,KAAC,MAAD;AAAA,6BACE;AAAA;AAAA;AADF,MADF;AAKD;;AAxCgC;;AA2CnC,eAAeF,UAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport Layout from \"../../components/Layout\";\r\nimport record from \"../../ethereum/record\";\r\nimport web3 from \"../../ethereum/web3\";\r\n\r\nclass recordShow extends Component {\r\n  static async getInitialProps(props) {\r\n    const accounts = await web3.eth.getAccounts();\r\n    const currentRecord = record(props.query.address);\r\n    const NameAndImage = await currentRecord.methods\r\n      .getNameandAddress()\r\n      .call({ from: accounts[0] });\r\n    const details = await currentRecord.methods\r\n      .getDetails()\r\n      .call({ from: accounts[0] });\r\n    const prescriptionlength = await currentRecord.methods\r\n      .getPrescriptionLength()\r\n      .call({ from: accounts[0] });\r\n    const reportLength = await currentRecord.methods\r\n      .getReportLength()\r\n      .call({ from: accounts[0] });\r\n    const prescriptions = [];\r\n    for (var i = 0; i < prescriptionlength; i++) {\r\n      prescriptions.push(\r\n        await currentRecord.methods\r\n          .getPrescription(i)\r\n          .call({ from: accounts[0] })\r\n      );\r\n    }\r\n    const reports = [];\r\n    for (var i = 0; i < reportLength; i++) {\r\n      const reportLink = await currentRecord.methods\r\n        .getReport(i)\r\n        .call({ from: accounts[0] });\r\n      reports.push();\r\n    }\r\n    return { NameAndImage, details, accounts, reports, prescriptions };\r\n  }\r\n  render() {\r\n    console.log(this.props);\r\n    return (\r\n      <Layout>\r\n        <h1>Your details are here!!</h1>\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n\r\nexport default recordShow;\r\n"]},"metadata":{},"sourceType":"module"}