{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component, createFactory } from \"react\";\nimport { Button, Form, Input, Message } from \"semantic-ui-react\";\nimport Layout from \"../../components/Layout\";\nimport factory from \"../../ethereum/factory\";\nimport web3 from \"../../ethereum/web3\";\nimport { Router } from \"../../routes\"; //ipfs requirements\n\nconst ipfsClient = require(\"ipfs-http-client\");\n\nconst ipfs = ipfsClient({\n  host: \"ipfs.infura.io\",\n  port: 5001,\n  protocol: \"https\"\n});\nconst options = [{\n  key: \"m\",\n  text: \"Male\",\n  value: \"male\"\n}, {\n  key: \"f\",\n  text: \"Female\",\n  value: \"female\"\n}, {\n  key: \"o\",\n  text: \"Other\",\n  value: \"other\"\n}];\n\nclass newRecord extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      name: \"\",\n      bufferReport: null,\n      bufferPrescription: null,\n      account: null,\n      errorMessage: \"\",\n      loading: false,\n      age: \"\",\n      gender: \"\",\n      height: \"\",\n      weight: \"\",\n      imageHash: \"\",\n      doctorAddress: this.props.doctor\n    });\n\n    _defineProperty(this, \"captureFilePrescription\", event => {\n      event.preventDefault();\n      const file = event.target.files[0];\n      const reader = new window.FileReader();\n      reader.readAsArrayBuffer(file);\n\n      reader.onloadend = () => {\n        this.setState({\n          bufferPrescription: Buffer(reader.result)\n        });\n        console.log(\"bufferPrescription\", this.state.bufferPrescription);\n      };\n    });\n\n    _defineProperty(this, \"captureFileReport\", event => {\n      event.preventDefault();\n      const file = event.target.files[0];\n      const reader = new window.FileReader();\n      reader.readAsArrayBuffer(file);\n\n      reader.onloadend = () => {\n        this.setState({\n          bufferReport: Buffer(reader.result)\n        });\n        console.log(\"bufferReport\", this.state.bufferReport);\n      };\n    });\n\n    _defineProperty(this, \"captureFileImage\", event => {\n      event.preventDefault();\n      const file = event.target.files[0];\n      const reader = new window.FileReader();\n      reader.readAsArrayBuffer(file);\n\n      reader.onloadend = () => {\n        this.setState({\n          imageHash: Buffer(reader.result)\n        });\n        console.log(\"imageHash\", this.state.imageHash);\n      };\n    });\n\n    _defineProperty(this, \"onSubmit\", async event => {\n      event.preventDefault();\n      this.setState({\n        loading: true\n      });\n    });\n  }\n\n  static getInitialProps(props) {\n    return {\n      doctor: props.query.address\n    };\n  }\n\n  async componentDidMount() {\n    const accounts = await web3.eth.getAccounts();\n    this.setState({\n      account: accounts[0]\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsx(Layout, {\n      children: /*#__PURE__*/_jsxs(Form, {\n        onSubmit: this.onSubmit,\n        error: !!this.state.errorMessage,\n        children: [/*#__PURE__*/_jsxs(Form.Group, {\n          widths: \"equal\",\n          children: [/*#__PURE__*/_jsx(Form.Input, {\n            label: \"name\",\n            placeholder: \"name\",\n            onChange: (event, {\n              value\n            }) => {\n              this.setState({\n                name: value\n              });\n            }\n          }), /*#__PURE__*/_jsx(Form.Input, {\n            label: \"age\",\n            placeholder: \"age\",\n            onChange: (e, {\n              value\n            }) => {\n              this.setState({\n                age: value\n              });\n            }\n          }), /*#__PURE__*/_jsx(Form.Select, {\n            label: \"gender\",\n            placeholder: \"gender\",\n            options: options,\n            onChange: (event, {\n              value\n            }) => {\n              this.setState({\n                gender: value\n              });\n            }\n          })]\n        }), /*#__PURE__*/_jsxs(Form.Group, {\n          widths: \"equal\",\n          children: [/*#__PURE__*/_jsx(Form.Input, {\n            label: \"height\",\n            placeholder: \"height\",\n            onChange: (event, {\n              value\n            }) => {\n              this.setState({\n                height: value\n              });\n            }\n          }), /*#__PURE__*/_jsx(Form.Input, {\n            label: \"weight\",\n            placeholder: \"weight\",\n            onChange: (e, {\n              value\n            }) => {\n              this.setState({\n                weight: value\n              });\n            }\n          }), /*#__PURE__*/_jsx(Form.Input, {\n            label: \"Profile Image\",\n            type: \"file\",\n            onChange: this.captureFileImage\n          })]\n        }), /*#__PURE__*/_jsxs(Form.Field, {\n          children: [/*#__PURE__*/_jsx(\"label\", {\n            children: \"prescriptions(if any previous prescriptions)\"\n          }), /*#__PURE__*/_jsx(Form.Input, {\n            type: \"file\",\n            onChange: this.captureFilePrescription\n          })]\n        }), /*#__PURE__*/_jsxs(Form.Field, {\n          children: [/*#__PURE__*/_jsx(\"label\", {\n            children: \"reports(if any previous reports)\"\n          }), /*#__PURE__*/_jsx(Form.Input, {\n            type: \"file\",\n            onChange: this.captureFileReport\n          })]\n        }), /*#__PURE__*/_jsx(Message, {\n          error: true,\n          header: \"Oops!!\",\n          content: this.state.errorMessage\n        }), /*#__PURE__*/_jsx(Button, {\n          loading: this.state.loading,\n          primary: true,\n          type: \"submit\",\n          children: \"Create\"\n        })]\n      })\n    });\n  }\n\n}\n\nexport default newRecord;","map":{"version":3,"sources":["F:/Securing health records using blockchain/pages/Records/new.js"],"names":["React","Component","createFactory","Button","Form","Input","Message","Layout","factory","web3","Router","ipfsClient","require","ipfs","host","port","protocol","options","key","text","value","newRecord","name","bufferReport","bufferPrescription","account","errorMessage","loading","age","gender","height","weight","imageHash","doctorAddress","props","doctor","event","preventDefault","file","target","files","reader","window","FileReader","readAsArrayBuffer","onloadend","setState","Buffer","result","console","log","state","getInitialProps","query","address","componentDidMount","accounts","eth","getAccounts","render","onSubmit","e","captureFileImage","captureFilePrescription","captureFileReport"],"mappings":"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","sourcesContent":["import React, { Component, createFactory } from \"react\";\r\nimport { Button, Form, Input, Message } from \"semantic-ui-react\";\r\nimport Layout from \"../../components/Layout\";\r\nimport factory from \"../../ethereum/factory\";\r\nimport web3 from \"../../ethereum/web3\";\r\n\r\nimport { Router } from \"../../routes\";\r\n\r\n//ipfs requirements\r\nconst ipfsClient = require(\"ipfs-http-client\");\r\n\r\nconst ipfs = ipfsClient({\r\n  host: \"ipfs.infura.io\",\r\n  port: 5001,\r\n  protocol: \"https\",\r\n});\r\nconst options = [\r\n  { key: \"m\", text: \"Male\", value: \"male\" },\r\n  { key: \"f\", text: \"Female\", value: \"female\" },\r\n  { key: \"o\", text: \"Other\", value: \"other\" },\r\n];\r\nclass newRecord extends Component {\r\n  state = {\r\n    name: \"\",\r\n    bufferReport: null,\r\n    bufferPrescription: null,\r\n    account: null,\r\n    errorMessage: \"\",\r\n    loading: false,\r\n    age: \"\",\r\n    gender: \"\",\r\n    height: \"\",\r\n    weight: \"\",\r\n    imageHash: \"\",\r\n    doctorAddress: this.props.doctor,\r\n  };\r\n\r\n  static getInitialProps(props) {\r\n    return { doctor: props.query.address };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const accounts = await web3.eth.getAccounts();\r\n    this.setState({ account: accounts[0] });\r\n  }\r\n\r\n  captureFilePrescription = (event) => {\r\n    event.preventDefault();\r\n    const file = event.target.files[0];\r\n    const reader = new window.FileReader();\r\n    reader.readAsArrayBuffer(file);\r\n    reader.onloadend = () => {\r\n      this.setState({ bufferPrescription: Buffer(reader.result) });\r\n      console.log(\"bufferPrescription\", this.state.bufferPrescription);\r\n    };\r\n  };\r\n\r\n  captureFileReport = (event) => {\r\n    event.preventDefault();\r\n    const file = event.target.files[0];\r\n    const reader = new window.FileReader();\r\n    reader.readAsArrayBuffer(file);\r\n    reader.onloadend = () => {\r\n      this.setState({ bufferReport: Buffer(reader.result) });\r\n      console.log(\"bufferReport\", this.state.bufferReport);\r\n    };\r\n  };\r\n\r\n  captureFileImage = (event) => {\r\n    event.preventDefault();\r\n    const file = event.target.files[0];\r\n    const reader = new window.FileReader();\r\n    reader.readAsArrayBuffer(file);\r\n    reader.onloadend = () => {\r\n      this.setState({ imageHash: Buffer(reader.result) });\r\n      console.log(\"imageHash\", this.state.imageHash);\r\n    };\r\n  };\r\n\r\n  onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    this.setState({ loading: true });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Layout>\r\n        <Form onSubmit={this.onSubmit} error={!!this.state.errorMessage}>\r\n          <Form.Group widths=\"equal\">\r\n            <Form.Input\r\n              label=\"name\"\r\n              placeholder=\"name\"\r\n              onChange={(event, { value }) => {\r\n                this.setState({ name: value });\r\n              }}\r\n            />\r\n            <Form.Input\r\n              label=\"age\"\r\n              placeholder=\"age\"\r\n              onChange={(e, { value }) => {\r\n                this.setState({ age: value });\r\n              }}\r\n            />\r\n            <Form.Select\r\n              label=\"gender\"\r\n              placeholder=\"gender\"\r\n              options={options}\r\n              onChange={(event, { value }) => {\r\n                this.setState({ gender: value });\r\n              }}\r\n            />\r\n          </Form.Group>\r\n          <Form.Group widths=\"equal\">\r\n            <Form.Input\r\n              label=\"height\"\r\n              placeholder=\"height\"\r\n              onChange={(event, { value }) => {\r\n                this.setState({ height: value });\r\n              }}\r\n            />\r\n            <Form.Input\r\n              label=\"weight\"\r\n              placeholder=\"weight\"\r\n              onChange={(e, { value }) => {\r\n                this.setState({ weight: value });\r\n              }}\r\n            />\r\n            <Form.Input\r\n              label=\"Profile Image\"\r\n              type=\"file\"\r\n              onChange={this.captureFileImage}\r\n            />\r\n          </Form.Group>\r\n          <Form.Field>\r\n            <label>prescriptions(if any previous prescriptions)</label>\r\n            <Form.Input type=\"file\" onChange={this.captureFilePrescription} />\r\n          </Form.Field>\r\n          <Form.Field>\r\n            <label>reports(if any previous reports)</label>\r\n            <Form.Input type=\"file\" onChange={this.captureFileReport} />\r\n          </Form.Field>\r\n          <Message error header=\"Oops!!\" content={this.state.errorMessage} />\r\n          <Button loading={this.state.loading} primary type=\"submit\">\r\n            Create\r\n          </Button>\r\n        </Form>\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n\r\nexport default newRecord;\r\n"]},"metadata":{},"sourceType":"module"}